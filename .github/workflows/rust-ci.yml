name: Rust CI
on:
  push:
    branches: [main]
    tags:
      - "*"
    paths:
      - "**/*.rs"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
  pull_request:
    paths:
      - "**/*.rs"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
env:
  CARGO_TERM_COLOR: always
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Set up Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "23.x"
      - name: cargo check
        run: cargo check
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Set up Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "23.x"
      - name: cargo clippy --all-features --all-targets -- -D warnings
        run: cargo clippy --all-features --all-targets -- -D warnings
  # doc:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: dtolnay/rust-toolchain@stable
  #     - name: cargo doc
  #       run: cargo doc --no-deps --all-features
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Set up Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "23.x"
      - name: cargo fmt --check
        run: cargo fmt --check
  fmt-nightly:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: Set up Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "23.x"
      - name: cargo +nightly fmt --check
        run: cargo +nightly fmt --check
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Set up Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "23.x"
      - name: cargo test
        run: cargo test
  coverage:
    runs-on: ubuntu-latest
    env:
      APP_ENVIRONMENT: ci
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Set up Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "23.x"
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo llvm-cov
        run: cargo llvm-cov --locked --all-features --lcov --output-path lcov.info
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [check, clippy, fmt, fmt-nightly, test, coverage]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{steps.github_release.outputs.changelog}}
          draft: false
          prerelease: false
